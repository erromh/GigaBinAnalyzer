/*

Подробный алгоритм реализации утилиты слияния и сортировки файлов:

1. Чтение входных аргументов

    Проверьте количество аргументов командной строки.
        Должно быть ровно три: путь до первого файла, путь до второго файла, путь до файла результата.
    Если количество аргументов не соответствует требуемому, выведите сообщение об ошибке и завершите программу.

2. Проверка существования входных файлов

    Проверьте доступность двух входных файлов (с использованием системных вызовов или стандартной библиотеки C).
    Если хотя бы один файл недоступен, выведите соответствующее сообщение об ошибке и завершите программу.

3. Считывание содержимого файлов

    Откройте оба входных файла в режиме "чтение бинарного файла" (rb).
    Прочитайте:
        Количество массивов (записанных StoreDump).
        Размер каждого массива.
        Содержимое массивов (структуры типа StatData).
    Сохраните все прочитанные структуры в два отдельных массива памяти (array1 и array2).

4. Слияние содержимого файлов (JoinDump)

    Создайте новую функцию JoinDump:
        Принимает два массива структур StatData произвольного размера.
        Удаляет записи с одинаковым id и выполняет объединение данных:
            Поля count и cost складываются.
            Поле primary принимает значение 0, если хотя бы в одном элементе оно равно 0.
            Поле mode принимает максимальное значение из двух.
    Верните результат объединения в новый массив mergedArray.

5. Сортировка содержимого (SortDump)

    Передайте объединённый массив в функцию SortDump.
    Отсортируйте массив по значению поля cost в порядке возрастания.
    Верните отсортированный массив.

6. Печать первых 10 записей

    Проверьте размер итогового массива:
        Если записей меньше 10, выводите только имеющиеся.
    Выведите первые 10 записей в виде таблицы:
        Формат:
            id: в шестнадцатеричном формате (%lx).
            count: в десятичном формате (%d).
            cost: в экспоненциальном формате с 3 знаками после запятой (%.3e).
            primary: "n", если 0; "y", если 1.
            mode: в бинарном формате (%b).
    Убедитесь, что таблица выровнена и читаема.

7. Сохранение результата

    Создайте (или перезапишите) файл по пути, указанному в третьем аргументе.
    Сохраните в него:
        Количество массивов (1).
        Размер массива (равен размеру объединённого и отсортированного массива).
        Содержимое итогового массива структур.
    Закройте файл.

8. Завершение программы

    Освободите выделенную динамическую память.
    Выведите сообщение о успешном завершении работы.
*/